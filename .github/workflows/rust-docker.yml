name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/ogrodje/podcasters-collector:latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-for-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get install musl-tools
      - run: |
          rustup toolchain install stable --profile minimal && \
          rustup component add rustfmt && \
          rustup target add x86_64-unknown-linux-musl

      - run: cargo fmt --all -- --check
      - run: cargo build --release --target=x86_64-unknown-linux-musl
      - run: strip 'target/x86_64-unknown-linux-musl/release/podcasters-collector'

      - name: Get version
        id: version
        shell: bash
        run: |
          VERSION="$(cargo pkgid | cut -d'#' -f2 | cut -d: -f2)"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag::v$VERSION"

      - name: Build package
        id: package
        shell: bash
        run: |
          ARCHIVE_NAME_WITH_DETAILS="podcasters-collector-${{ steps.version.outputs.tag }}-x86_64-unknown-linux-musl"
          ARCHIVE_NAME="podcasters-collector-x86_64-unknown-linux-musl"
          ARCHIVE_FILE="${ARCHIVE_NAME}.tar.gz"
          mkdir "/tmp/${ARCHIVE_NAME}"
          cp README.md "target/x86_64-unknown-linux-musl/release/podcasters-collector" "/tmp/${ARCHIVE_NAME}"
          tar -czf "${PWD}/${ARCHIVE_FILE}" -C /tmp/ "${ARCHIVE_NAME}"
          echo ::set-output "name=file::${ARCHIVE_FILE}"
          echo ::set-output "name=name::${ARCHIVE_NAME}.tar.gz"

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.name }}
          path: ${{ steps.package.outputs.file }}

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: "Latest"
          tag_name: ${{ github.ref }}
          # body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package.outputs.file }}
          asset_name: podcasters-collector-x86_64-unknown-linux-musl.tar.gz
          asset_content_type: application/gzip
